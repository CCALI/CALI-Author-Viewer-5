@import 
url(https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css);

// Variables used to set the font appearance.
@CLFontFamily: "Lucida Grande", "Verdana", "Helvetica Neue", "Lucida Sans Unicode", "Lucida Sans Regular", Arial, sans-serif; 
@CLFontWeight: 300;

//color variables
@DarkBlue: #003366;
@Gold: #d4c229;
@White: #ffffff;
@WhiteFakeOpacity:#8099b3;
@Grey: #efefef;

@CLThemeColor: @DarkBlue;

// images
@ArrowLeftBlue:
"https://image.ibb.co/ksA7nS/arrow_left_white.png";
@ArrowRightWhite: "https://image.ibb.co/bVnbgn/arrow_right_blue.png";

//content variable
@NavMargin: 30px 0px 0px 15px;
@LightBorders: 1px solid rgba(153,153,153,0.4);
@Clear: none;
@Radius: 0px;

//brand
@CLLogo: url(https://image.ibb.co/iKxAeH/cali_lessons_logo_170px.png);
@CLLogoWidth: 170px;

//icon buttons
@CLMenuWhite: url(https://image.ibb.co/jPdfwx/hamburger_white_32px.png);
@CLMenuBlue: url(https://image.ibb.co/gVyoEH/hamburger_menu_32px.png);
@CLExit: url(https://image.ibb.co/m944oc/exit_32px.png);
@CLArrowLeftBlue: url(https://image.ibb.co/mVgSOc/arrow_previous.png);
@CLArrowRightWhite: url(https://image.ibb.co/n7VyUH/arrow_next.png);

.border-radius(@Radius) {
  -webkit-border-radius: @Radius;
  -moz-border-radius: @Radius;
  -o-border-radius: @Radius;
  -ms-border-radius: @Radius;
  border-radius: @Radius;
}

.appearance-hidden (@Clear) {
  -webkit-appearance: @Clear;
  -moz-appearance: @Clear;
  -o-appearance: @Clear;
  -ms-appearance: @Clear;
  appearance: @Clear;
}

.border-none {
  outline: none !important;
  box-shadow: none !important;
}

.CLIconButtonWidth {
  width: 32px;
  height: 32px;
}

.CLButtonRules {
  .border-radius(0px);
  font-size: 18px;
  text-align: left;
  width: 140px;
  height: 40px;
  margin: 10px 5px 0px 0px;
}

.CLButtonPreviousRules {
  color: @CLThemeColor !important;
  background: lighten(@WhiteFakeOpacity, 35%) !important;
}

.CLPreviousActions {
  .CLButtonRules;
  .CLButtonPreviousRules;
}

.CLNextActions {
  .CLButtonRules;
  background: lighten(@CLThemeColor, 5%) !important;
  border: 2px solid lighten(@CLThemeColor, 5%) !important;
}

.CLButtonArrowRules {
  height: 30px;
  width: 30px;
  margin-top:-3px;
}

//------------------------------
// Body
//------------------------------

body {
  font: @CLFontFamily;
  font-weight: @CLFontWeight;
}

h1 {
  color: @CLThemeColor;
  padding-bottom: 25px;
}

h2 {
  color: @CLThemeColor;
  margin-top: 0px;
  padding-top: 10px;
  padding-bottom: 5px;
}

img {
  border:0 !important;
}

//------------------------------
// Navigation
//------------------------------

.CL-navbar-main {
  background: @CLThemeColor;
  border-bottom: 5px solid @Gold;
  .border-radius (@Radius);
}

.CL-navbar {
    height: 84px;
    background: @CLThemeColor;
    border-color: @CLThemeColor;
}

.navbar-text {
  margin: @NavMargin;
}

.CL-menu-button {
  margin-top: 16px;
  border: none;
  &:hover,
  &:focus {
    background: none !important;
    opacity: 0.9 !important;
  }
  &:checked,
  &:active {
    opacity: 0.75 !important;
  }
}

.CL-hamburger-white {
  display: block;
  .CLIconButtonWidth;
  background: @CLMenuWhite center center no-repeat;
}

.exit-btn {
  margin-top: 10px;
  .CLIconButtonWidth;
  float:left;
  background: @CLExit top  left no-repeat;
  &:hover {
    opacity: 0.5;
  }
  &:active {
    opacity: 0.75;
  }
}

.CL-logo {
  content: @CLLogo;
  width: @CLLogoWidth;
  height: 49px;
}

.user-name-link {
  color: @White;
     &:hover {
      color: @WhiteFakeOpacity;
      text-decoration: none;
     }  
}

.exit-link {
  display: none;
}

//------------------------------
// Lessons View
//------------------------------

input.CL-hamburger[type="checkbox"] {
  content: @CLMenuBlue;
  display: inline-block;
  width: 32px;
  height: 32px;
  float: left;
  margin-top: 10px;
  margin-left: 0px;
  margin-right: 10px;
  padding-right: px;
  cursor: pointer;
  pointer-events:auto;
  .appearance-hidden (@Clear);
  outline: none;
  &:checked {
    content: url(https://image.ibb.co/mVgSOc/arrow_previous.png);
    .appearance-hidden (@Clear);
    outline: none;
  }
}

.top-bottom-outline {
  border-top: @LightBorders;
  border-right:  none;
  border-bottom: @LightBorders;
  border-left:   none;
}

.right-outline {
  border-top: none;
  border-right:  @LightBorders;
  border-bottom: none;
  border-left:   none;  
}

//------------------------------
// Bottom Controls
//------------------------------

.CL-next-btn {
  .CLButtonRules;
  background: @CLThemeColor;
  border: 2px solid @CLThemeColor;
  &:hover,
  &:focus {
    .CLNextActions;
    .border-none;
    box-shadow: none !important;
  }
  &:active {
    .CLNextActions;
    .border-none;
    box-shadow: none !important;
    opacity: 0.95;
  }
}

.CL-previous-btn {
  .CLButtonRules;
  color: @CLThemeColor;
  background: @White;
  font-weight: 600;
  border: 2px solid @CLThemeColor;
    &:hover, 
    &:focus {
      .CLPreviousActions;
      .border-none;
    }
    &:active {
      .CLPreviousActions;
      opacity: 0.85;
    }
}

.next-arrow {
  background: @CLArrowRightWhite;
  float: right;
  .CLButtonArrowRules;
  margin-right: -5px;
}

.previous-arrow {
  background: @CLArrowLeftBlue;
  float: left;
  .CLButtonArrowRules;
  margin-right: 5px;
  margin-left: -10px;
}

//------------------------------
// Responsive Styles
//------------------------------

@media (max-width:768px) {
  .CL-navbar-main {
    background: @Grey;
  }
  .user-name-link {
    color: @CLThemeColor;
    font-size: 18px;
    margin: 0px 0px 0px 20px;
  }
  .navbar-text {
    margin: 20px 0px 20px 0px;
  }
  .exit-icon {
    display: none !important;
  }
  .exit-btn {
    display: none !important;
  }
  .exit-link {
    display: block;
    color: @CLThemeColor;
    font-size: 18px;
    margin: 0px 0px 0px 20px;
     &:hover {
      color: @WhiteFakeOpacity;
      text-decoration: none;
     }  
  }
}

/*----------------*/
/* Toggle Styles */
/*----------------*/

#wrapper {
    padding-left: 70px;
    transition: all .4s ease 0s;
/*height: 100%;*/
    border: 1px solid #efefef;
}

#sidebar-wrapper {
    margin-left: -350px;
    margin-top: 0px;
    display: inline-block;
    left: 0!important;
    float: left;
    width: 280px;
    position: relative;
    position: re;
    transition: all .4s ease 0s;
}

.sidebar-nav {
    display: block;
    float: left;
    width: 280px;
    list-style: none;
    margin: -85px 0px 0px 0px;
    padding: 0;
}

#wrapper.active {
    padding-left: 350px;
}
#wrapper.active #sidebar-wrapper {
    left: 280px;
}

#page-content-wrapper {
    margin-left: -70px;
    padding-left: 20px;
    width: 100%;
    height: auto;
    display: inline-block;
    border-left: 1px solid #efefef;
    }

#sidebar_menu li a, .sidebar-nav li a {
    color: #090909;
    display: block;
    float: left;
    text-decoration: none;
    width: 280px;
    background: #fff;
    -webkit-transition: background .5s;
    -moz-transition: background .5s;
    -o-transition: background .5s;
    -ms-transition: background .5s;
    transition: background .5s;
}
.sidebar_name {
    padding-top: 25px;
    color: #fff;
    opacity: .7;
}

.sidebar-nav li {
  line-height: 40px;
  text-indent: 20px;
}

.sidebar-nav li a {
  color: #999999;
  display: block;
  text-decoration: none;
}

.sidebar-nav li a:hover {
  color: #fff;
  background: rgba(255,255,255,0.2);
  text-decoration: none;
}

.sidebar-nav li a:active,
.sidebar-nav li a:focus {
  text-decoration: none;
}

.sidebar-nav > .sidebar-brand {
  height: 65px;
  line-height: 60px;
  font-size: 18px;
}

.sidebar-nav > .sidebar-brand a {
  color: #999999;
}

.sidebar-nav > .sidebar-brand a:hover {
  color: #fff;
  background: none;
}

#main_icon {
   float:right;
   padding-right: 65px;
   padding-top:20px;
}
.sub_icon {
   float:right;
   padding-right: 65px;
   padding-top:10px;
}
.content-header {
  height: 65px;
  line-height: 65px;
}

.content-header h1 {
  margin: 0;
  margin-left: 20px;
  line-height: 65px;
  display: inline-block;
}

@media (max-width:767px) {
    #wrapper {
      padding-left: 70px;
      transition: all .4s ease 0s;
  }
    #sidebar-wrapper {
      left: 70px;
  }
    #wrapper.active {
      padding-left: 350px;
  }
    #wrapper.active #sidebar-wrapper {
      left: 350px;
      width: 280px;
      transition: all .4s ease 0s;
  }
}

/*----------------
/* Accordion
/*----------------*/

ol, ul { list-style: none }

.nav-tree h2 {
  margin-left: 20px;
  margin-top: 0px;
}

.nav-tree a, .nav-tree label {
  display: block;
  padding: .85rem;
  font-size: 18px;
  color: #0066cc;
  -webkit-transition: all .25s ease-in;
  transition: all .25s ease-in;
}

.nav-tree a:focus, .nav-tree a:hover, .nav-tree label:hover {
  color: #003366;
  background: #efefef;
  text-decoration-line: none;
}

.nav-tree label:focus, .nav-tree label:active  {
  color: #ffffff;
  background: #003366;
}

.nav-tree label { 
  cursor: pointer;
  font-size: 18px;
  color: #0066cc;
  padding-left: 28px;
}

/**
 * Styling first level lists items
 */

.group-list a, .group-list label {
    padding-left: 4rem;
    margin-left: -40px;
}

.group-list a:hover, .group-list label:hover { background: #efefef; }

.group-list a:focus, .group-list a:active, .group-list label:focus, .group-list label:active  {
  color: #ffffff;
  background: #003366;
}
/**
 * Styling second level list items
 */

.sub-group-list a, .sub-group-list label {
  padding-left: 2rem;
}

.sub-group-list a:focus, .sub-group-list a:hover, .sub-group-list label:focus, .sub-group-list label:hover { 
  background: #efefef; 
}

/**
 * Styling third level list items
 */

.sub-sub-group-list a, .sub-sub-group-list label {
  padding-left: 6rem;
  background: #454545;
}

.sub-sub-group-list a:focus, .sub-sub-group-list a:hover, .sub-sub-group-list label:focus, .sub-sub-group-list label:hover { background: #333333; }

/**
 * Hide nested lists
 */

.group-list, .sub-group-list, .sub-sub-group-list {
  height: 100%;
  max-height: 0;
  overflow: hidden;
  -webkit-transition: max-height .5s ease-in-out;
  transition: max-height .5s ease-in-out;
}

.nav__list {
   margin-left: -40px;
}

.nav__list a {
  border-top: 1px solid #efefef;
}

.nav__list label {
  border-top: 1px solid #efefef;
  margin-bottom: -2px;
}


.nav__list input[type=checkbox]:checked + label + ul { /* reset the height when checkbox is checked */
  max-height: 170px;
}

/**
 * Rotating chevron icon
 */

label > span {
  float: right;
  -webkit-transition: -webkit-transform .65s ease;
  transition: transform .65s ease;
}

.nav__list input[type=checkbox]:checked + label > span {
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}

/*--------------*/
/*Radio Buttons
/*--------------*/

/*--------------*/
/*Radio selected
/*--------------*/

/* The container */
.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default radio button */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom radio button */
.checkmark-rad-selected {
    position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    border: 3px solid #999;
    background-color: #fff;
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-rad-selected {
    background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark-rad-selected {
    background-color: #fff;
    border: 3px solid #4186f4;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark-rad-selected:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark-rad-selected:after {
    display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark-rad-selected:after {
    top: 3px;
    left: 3px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #4186f4;
}


/*--------------*/
/*Radio success
/*--------------*/

/* The container */
.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default radio button */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom radio button */
.checkmark-rad-success {
    position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    border: 3px solid #999;
    background-color: #fff;
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-rad-success {
    background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark-rad-success {
    background-color: #fff;
    border: 3px solid #00c752;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark-rad-success:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark-rad-success:after {
    display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark-rad-success:after {
    top: 3px;
    left: 3px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #00c752;
}

/*--------------*/
/*Radio error
/*--------------*/

/* The container */
.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default radio button */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom radio button */
.checkmark-rad-error {
    position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    border: 3px solid #999;
    background-color: #fff;
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-rad-error {
    background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark-rad-error {
    background-color: #fff;
    border: 3px solid #e91e63;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark-rad-error:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark-rad-error:after {
    display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark-rad-error:after {
    top: 3px;
    left: 3px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #e91e63;
}

/*--------------*/
/*Radio default
/*--------------*/

/* The container */
.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default radio button */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom radio button */
.checkmark-rad-default {
    position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    border: 3px solid #999;
    background-color: #fff;
    border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-rad-default {
    background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark-rad-default {
    background-color: #fff;
    border: 3px solid #777;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark-rad-default:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark-rad-default:after {
    display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark-rad-default:after {
    top: 3px;
    left: 3px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #777;
}

/*--------------*/
/*checkbox selected
/*--------------*/

.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.checkmark-selected {
position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    background-color: #fff;
    border: 3px solid #777;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-selected {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark-selected {
    border: 3px solid #2196F3;
    background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark-selected:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark-selected:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark-selected:after {
    left: 4px;
    top: 0px;
    width: 6px;
    height: 12px;
    border: solid #fff;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

/*--------------*/
/*checkbox error
/*--------------*/

.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.checkmark-wrong {
position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    background-color: #fff;
    border: 3px solid #777;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-wrong {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark-wrong {
    border: 3px solid #e91e63;
    background-color: #e91e63;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark-wrong:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark-wrong:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark-wrong:after {
    left: 4px;
    top: 0px;
    width: 6px;
    height: 12px;
    border: solid #fff;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

/*--------------*/
/*checkbox success
/*--------------*/

.container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.checkmark-success {
position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    background-color: #fff;
    border: 3px solid #777;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-success {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark-success {
    border: 3px solid #00c752;
    background-color: #00c752;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark-success:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark-success:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark-success:after {
    left: 4px;
    top: 0px;
    width: 6px;
    height: 12px;
    border: solid #fff;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

/*--------------*/
/*checkbox default
/*--------------*/

.container {
    display: block;
    position: relative;
    padding-left: 35px;
    marting-top: 10px;
    cursor: pointer;
    font-size: 16px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
}

/* Create a custom checkbox */
.checkmark-default {
position: absolute;
    top: 0;
    left: 5;
    height: 20px;
    width: 20px;
    background-color: #fff;
    border: 3px solid #777;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark-default {
    background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark-default {
    border: 3px solid #777;
    background-color: #777;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark-default:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark-default:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark-default:after {
    left: 4px;
    top: 0px;
    width: 6px;
    height: 12px;
    border: solid #fff;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

.adjust-left {
  margin-left: 14px;
}